name: CMake

on:
  push:
    branches: [ ut-test ]
  pull_request:
    branches: [ ut-test ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform-agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Update dependency list
        run: sudo apt-get update

      - name: Install dependencies
        run: sudo apt-get install libunwind-dev libboost-all-dev build-essential qtcreator qtbase5-dev qt5-qmake qtpositioning5-dev qtmultimedia5-dev cmake libbluetooth-dev libmtp-dev libudev-dev libinput-dev libsystemd-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 libpulse-dev gstreamer1.0-pulseaudio libtag1-dev

      ##### Setup of all internal (Polaris) dependencies

      # libdbuswrapper
      - name: Clone a tata-project repo
        uses: actions/checkout@v3
        with:
          repository: Trail-Tech/tata-project
          #token: ${{ secrets.BG_POLARIS }}
          path: tata-project

      - name: Install tata-project
        run: |
          cd tata-project
          mkdir build
          cd build
          cmake -DCMAKE_PREFIX_PATH=`qmake -query QT_HOST_PREFIX` -DCMAKE_INSTALL_PREFIX=`qmake -query QT_HOST_PREFIX` ..
          sudo make install
